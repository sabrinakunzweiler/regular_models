def lci(xi):
    r""" Realize the component corresponding to `\xi` as a local complete intersection.

        INPUT:

        - ``xi`` -- a point of type II on the Berkovich line

        OUTPUT:
        - ``F`` -- a polynomial in U and T
        - ``u`` -- a polyomial in x
        - ``t`` -- a polyomial in x
        such that a Zariski neighborhood of xi is isomorphic to `O_K[u,t]= O_K[U,T]/(F(U,T))`.

        """
    
    v = xi.pseudovaluation_on_polynomial_ring()
    K = v.phi().base_ring()
    x = v.phi().variables()[0]
    u = v.uniformizer()
    if u in K: #u needs to be a uniformizer on the special fibre localized at xi. Hence it is not allowed to be equal to the prime element pi in O_K.
        k = v(v.phi())
        u = v.phi()/v.uniformizer()**(k-1) 
    t = v.lift(v.residue_ring().gen())
    B = K['U, T, x']; (U, T, x,) = B._first_ngens(3)
    I = B.ideal(B(u)-U,B(t)-T)
    return [I.elimination_ideal([x]).gens()[0],u,t]

def ord_dx(xi):
    r"""
    Returns the order of the rational section `dx` on the component with generic point `\xi`.

    INPUT:
    -  ``xi`` -- a point of type II on the Berkovich line

    OUTPUT:
    - the order of the rational section `dx` on the component with generic point `\xi`

    """""
    v = xi.pseudovaluation_on_polynomial_ring()
    #realize a Zariski neighborhood U of the generic point xi as a local complete intersection
    [F,u,t] = lci(xi)
    #canoncial sheaf on U is generated by `du/F_t`, where `F_t` is the derivative of `F` with respect to `t`.
    #So the order of `dx = du/u_x` is given by `v(F_t) - v(u_x)`
    u_x = u.derivative()
    R = F.parent()
    U,T,x = R.gens()
    F_t = F.derivative(T)
    return v(R(F_t)(u,t,x)) - v(u_x)


def canonical_sheaf_global_sections(f,n, v_K):
    r"""
    Returns the global sections of the canonical sheaf of a regular model of the superelliptic curve defined by y^n = f(x) over K

    INPUT:

    -  ``f`` - a monic, integral and separable polynomial of degree at least 3 over some field `K`
    -  ``n`` - an integer not dividing the residue characteristic of K
    -  ``v_K`` - a discrete valuation on `K`
    
    OUTPUT:
    -  An O_K lattice representing the global sections of the canonical sheaf of a regular model of the superelliptic curve `YK`. The differential forms are viewed as elements in the function field `K(YK)` under the embedding `\omega \mapsto \omega y^{n-1}/dx`

    """""

    S = f.base_ring()['x, y']; (x, y,) = S._first_ngens(2)
    G = y**n-f(x)

    X = minimal_rnc_model(f, v_K)
    F0 = X.function_field()
    R = F0['y']; (y,) = R._first_ngens(1)
    F = F0.extension(y**n - F0(f), names=('y',)); (y,) = F._first_ngens(1)

    B = [F(b) for b in differential_basis_baker(G)]
    M_K = RRSpace(v_K, F, B)
    m=[]
    i=Integer(0)
    for E in X.vertical_components():
        xi = E.generic_point()
        v = xi.pseudovaluation_on_polynomial_ring()
        v0 = F0.valuation(v)
        w0 = v0.extensions(F)[0]
        M_K.add_valuation(w0, "w{0}".format(i))
        if v(v.phi()) == 0 :
            mv = Integer(0) 
        else:
            #mv is the order of `\eta = dx/y^{n-1}` on the component E
            e = w0.value_group().index(v0.value_group());
            mv = ord_dx(xi) - w0(y) * (n - 1 ) + e - 1;
        m.append(("w{0}".format(i), -mv))
        i+=1
    return M_K.RR_lattice(m)

